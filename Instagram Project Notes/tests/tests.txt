official:

https://www.tutorialspoint.com/rspec/

https://docs.google.com/document/d/1Gb_41UeLG0B1YV-hQZLSVwcbhgnhewNyIBfy7UdpLYk/edit

https://betterprogramming.pub/13-tips-for-writing-useful-unit-tests-ca20706b5368

https://www.betterspecs.org/

************************************

https://github.com/rspec/rspec-rails

https://relishapp.com/rspec/rspec-rails/docs/

https://relishapp.com/rspec/rspec-rails/v/5-1/docs/controller-specs/controller-spec

https://github.com/simplecov-ruby/simplecov

rspec playlist
https://www.youtube.com/watch?v=Spogv4o8haM&list=PLS6F722u-R6KiuOupokyl8Xnqrot9ukc7&index=47

comments with post:
https://thoughtbot.com/blog/aint-no-calla-back-bot

shoulda:
https://github.com/thoughtbot/shoulda-matchers/blob/main/lib/shoulda/matchers/active_record/association_matcher.rb

**************************************************

 `create` is not available on an example group (e.g. a `describe` or `context` block).
 It is only available from within individual examples (e.g. `it` blocks) or from constructs that run in the scope of an example (e.g. `before`, `let`, etc).

**************************************************

1) gem 'rspec-rails'

2) rails generate rspec:install

3) rails generate model post            -- way to create model

rails generate rspec:model post         -- way to create rspec for this model




***************************



***************************

run test:
1) rspec
2) RUBYOPT="-W0" rspec


but first comment these two gems from test group:
gem 'selenium-webdriver'
gem 'chromedriver-helper'

*********************

simple cov

1) add gem and bundle
2) add 2 lines in spec_helper

run simple cov:

xdg-open coverage/index.html

*************************

add in .rspec:

--format documentation

*********************

rails stats

*********************
https://github.com/pry/pry-rails

gem 'pry-rails'

bundle

***********************

https://github.com/thoughtbot/factory_bot/blob/master/GETTING_STARTED.md#configure-your-test-suite

gem 'factory_bot_rails'
bundle


add in rails helper
config.include FactoryBot::Syntax::Methods

article = FactoryBot.create(:article)
post = FactoryBot.create(:post)

***********************
shoulda-matchers

https://github.com/thoughtbot/shoulda-matchers


***********************
https://jeffkreeftmeijer.com/carrierwave-rails-test-fixtures/

image testing:

let!(:account3) { Account.create(email: "shah12@gmail.com", name: "Shah", password: "nouman", confirmed_at: DateTime.now, image:File.open("#{Rails.root}/app/assets/images/default.png") )}

it "should not have an image" do
  # is_exist = File.exists?(account1.image.url(:standard))
  # expect(is_exist).to eq(false)
  image = account1.image.url
  expect(image).to eq(nil)
end

**************************

model test can test:
  validations
  associations
  scope
  business logic


controller test can test:
  status code
  content type template rendered
  Flash Messages
  insert/update/delete
  redirects


Frameworks
  MiniTest
  RSpec
  Cucumber    browser testing
  Capybara
  FactoryGirl
  FactoryBot



gem 'byebug', platforms: [:mri, :mingw, :x64_mingw]
gem 'rspec-rails'
gem 'factory_bot_rails'
gem 'rails-controller-testing'


*****************

FactoryBot.define do
  factory :post do
    association :account
    content { "content" }

    after(:create) do |post|
      post.photos.create(image: File.open("#{Rails.root}/app/assets/images/default2.png"))
    end
  end
end


******************

sync points:

Let vs Let!
Life Cycle of object creation
Faker
Factory Bot
Stubbing and Mocking
Shared Example and Shared Context
Describe, it and context
Conventions of test cases
Expect instance variables in controllers (For Testing of controllers)
Expect of authentication and authorizations
