

https://cloudinary.com/documentation/rails_integration

1) add gem
2) create cloudinary.rb file in initializer
3) rails g uploader Photo                          -- from carrier wave
4) add in photo model:
  mount_uploader :image, PhotoUploader

cloudinary docs:
https://cloudinary.com/documentation/rails_carrierwave

carrierwave:
https://github.com/carrierwaveuploader/carrierwave

************************

figaro:
https://github.com/laserlemon/figaro

we use figaro gem to add environment variables:

gem 'figaro'

add variables in config/application.yml by this syntax:
key_name: "value"

and access like:
ENV["key_name"]

************************

carrierwave:

1) gem install carrierwave

2) gem 'carrierwave', '~> 2.0'

3) rails generate uploader Photo

4) Now add image field in model and add this to model:

5) mount_uploader :image, PhotoUploader

6) Now you can cache files by assigning them to the attribute, they will automatically be stored when the record is saved.

u = User.new
u.avatar = params[:file]         # Assign a file like this, or

# like this
File.open('somewhere') do |f|
  u.avatar = f
end

u.save!
u.avatar.url # => '/url/to/file.png'
u.avatar.current_path         # => 'path/to/file.png'
u.avatar_identifier # => 'file.png'
Note: u.avatar will never return nil, even if there is no photo associated to it. To check if a photo was saved to the model, use u.avatar.file.nil? instead.


****************************



#  Cloudinary::Uploader.destroy('hvkwsmtbz3pg5bhk4w8h')

# <Photo id: 24, image: "image/upload/v1663590930/hvkwsmtbz3pg5bhk4w8h.png", post_id: 52,
# created_at: "2022-09-19 12:35:27", updated_at: "2022-09-19 12:35:27">

#  https://support.cloudinary.com/hc/en-us/community/posts/200788242-Problem-Deleting-Image-From-Rails-Heroku-App

****************************

public_id = image_public_id(story[:image]) # destroy story image from cloudinary
Cloudinary::Uploader.destroy(public_id)


def image_public_id(str)
  my_array = str.split('/')
  filename = my_array[my_array.length - 1]
  index = (filename.length - 5)
  filename[0..index]
end
