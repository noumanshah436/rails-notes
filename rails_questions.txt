UDP vs TCP
DNS
Request life cycle
[8:21 PM] application vs web server
[8:23 PM] hash vs encryption
[8:24 PM] DNS vs Nameserver


Asad ullah Waheed  [8:41 PM]
resources vs resource(no index file) 

hashwithindifferent access
[8:52 PM] js vs jquery
[8:53 PM] coffee script vs javascript
[8:56 PM] active model
[9:01 PM] Dsl migration
[9:02 PM] index in db
[9:03 PM] active record vs active model
[9:06 PM] validate vs validates
[9:09 PM] model callback equences
[9:09 PM] commit  vs save
[9:09 PM] after commit vs after save
[9:13 PM] action controller
[9:15 PM] controller callback
[9:16 PM] fat vs slim controller
[9:16 PM] serilizer
[9:18 PM] controller requests
[9:21 PM] has and belong to many
[9:23 PM] polymorphic ass
[9:24 PM] csrf
[9:25 PM] groups in gemfile
[9:29 PM] routes in rails


Asad ullah Waheed  [9:34 PM]
concerns
[9:35 PM] non resourceful routes
[9:35 PM] enums
[9:36 PM] enums database computations
[9:37 PM] exit vs present
[9:40 PM] polymorphics
[9:40 PM] routes
[9:42 PM] form tag vs form for vs for with
[9:44 PM] N+1 problems
[9:49 PM] helper vs service



respond_to
csrf
credensials
protocols
http vs https
why we use SMDP of mailers
*SMTP
Styling for mailer
sessions
action dispatcher
ecumalator
group and goup by
each vs map
lamda is anounimous
get post different
application server and web server
puma
frameworks vs library
map vs each
rake tasks
custom
migration vs rake tasks
specific migration
rak vs rake
transpilation vs precompilation
scss vs sass
active r active m
orm
indexes in where
irreversable migrations
before create before save
serializers
weak params vs strong params
services
resolve
collection in partials
helpers
render redirect to
caches
and types
count size and length
rollback transactions
sidekiq worker
an d ways to call
how to set time for background jobs
rake tasks for jobs
custom transaction
sub queries
redis is key vaue store
lazy loading
class veriable
migration rollbacks for spesific version
custom transactions
active storage
cloudinary
ERD
private repo push on github(with robocop config)
pundit gem.
basic structure branch.
ActionDispatcher
acumulator, group vs group_by
each vs map
ruby block, lambda
symbol vs string
post vs get
app server vs web server
library vs framework
rake task vs migration
rollback specific migration
rack vs rake
precompilation vs transpilation
sass vs scss
Active Model vs Active Record
ORM mapping
after_commit
after_create vs after_save
usage of serializer
weak params vs strong params
polymorphic association vs STI
services
resolve
enums
partial collections
helper usage
js.erb
render vs redirect to
respond to (revise)
eager loading vs preloading vs join
view caching
fingerprinting
cache
count vs size vs length
present? vs exists? vs any?
return empty in find vs find_by vs where
how to fail transaction

**************************

UDP vs TCP
https://www.geeksforgeeks.org/differences-between-tcp-and-udp/

**************************

https://stackoverflow.com/questions/4948322/fundamental-difference-between-hashing-and-encryption-algorithms

 Hashing:

If you hash any plain text again you can not get the same plain text from hashed text. Simply, It's a one-way process.

 

Encryption and Decryption:

If you encrypt any plain text with a key again you can get same plain text by doing decryption on encrypted text with same(symetric)/diffrent(asymentric) key.


**************************

Advantages of CoffeeScript:
Easy to Understand: The syntax of this language is a simple form of JavaScript. ...
No var keyword: Unlike JavaScript, there is no need to use the var keyword before declaring a variable. ...
No symbols: The symbols like semicolons, parenthesis, and curly braces do not play any role in CoffeeScript.


************************

Migrations are a convenient way to alter your database schema over time in a consistent way. They use a Ruby DSL so that you don’t have to write SQL manually, allowing your schema and changes to be database independent.

**************************

https://guides.rubyonrails.org/active_record_validations.html#custom-methodshttps://stackoverflow.com/questions/18140898/whats-the-difference-between-validate-and-validates
https://guides.rubyonrails.org/active_record_validations.html#custom-methods

validates This method is a shortcut to all default validators and any custom validator classes ending in ‘Validator’. Note that Rails default validators can be overridden inside specific classes by creating custom validator classes in their place such as PresenceValidator.

validates :title, :body, :presence => true

***

validate, Adds a validation method or block to the class. This is useful when overriding the validate instance method becomes too unwieldy and you’re looking for more descriptive declaration of your validations.

validate :must_be_friends

  def must_be_friends
    errors.add(:base, 'Must be friends to leave a comment') unless commenter.friend_of?(commentee)
  end
  
 **************************
